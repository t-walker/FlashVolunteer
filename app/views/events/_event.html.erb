<% 
	description ||= :none
	show_links ||= false
	type ||= :display
	is_mobile ||= false
	badge_size ||= "small"
%>

<%if (is_mobile== true)
	badge_size = "exsmall"
%>
<%end%>

<div class="event-summary">
	<div class="row-fluid">
		<div class="<%= type == :display ? "span12" : "span9" %>">
			<div class="event-title">
				<%= link_to(truncate(event.name, :length=>30, :separator=>' '), event) %><br/>
			</div>
			<% if user_signed_in? and current_user.type == "Org" %>
				<div class="pull-right">
					<%= Participation.where('event_id = ?', event.id).sum(:hours_volunteered) %> total hours volunteered
				</div>
			<% end %>

			<div class="row-fluid">
				<div class="span8">
					<span><%= event.start.to_date.to_formatted_s(:rfc822) %>   |</span>
					<span class="pull-center"><%= event.start.strftime('%l:%M%p') %> - <%= event.end.strftime('%l:%M%p') %></span>
				</div>
			</div>
			<div class="row-fluid">
				<div class="span12">
					<span><%= render :partial => "skills/strip", :locals => { :entity => event, :size => badge_size } %></span>
				</div>
			</div>
			<% if description != :none %>
				<div class="row-fluid">
					<div class="span12">
						<%= 
							length = 100;
						    # Use this switch to support more sizes
							case description
								when :medium
									length = 200
								when :full
									length = 0
							end
							truncate(event.description, :length=>length, :separator=>' ')
						%>
					</div>
				</div>
			<% end %>
          <% if event.is_vm %>
              <div class="row-fluid">
                <div class="span2"><%= image_tag "/assets/vm_logo_small.jpg"%></div>
                <div class="span10">This event provided by VolunteerMatch</div>
              </div>
          <% end %>
			<% if show_links %>
				<div class="link_padding row-fluid">
					<div class="span12"><%= render(:partial => 'events/links', :locals => { :event => event }) %></div>
				</div>
			<% end %>
		</div>
		<% if type != :display %>
		<div class="span3">
			<%= 
				case type
					when :past
						render(:partial => "events/actions_past", :locals => { :event => event })
					when :upcoming
						render(:partial => "events/actions_upcoming", :locals => { :event => event })
					when :recommended
						render(:partial => "events/actions_recommended", :locals => { :event => event })
				end
			%>
		</div>
		<% end %>
	</div>
</div>